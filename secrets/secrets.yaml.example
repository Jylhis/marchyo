# Example secrets file for sops-nix
# This file demonstrates the structure for organizing secrets.
#
# DO NOT put real secrets in this file!
#
# To create your actual secrets file:
# 1. Copy this file: cp secrets/secrets.yaml.example secrets/secrets.yaml
# 2. Edit with sops: nix-shell -p sops --run "sops secrets/secrets.yaml"
# 3. Replace example values with real secrets
#
# The file will be automatically encrypted when you save it.

# Database credentials
database:
  postgres:
    password: example_password_replace_me
    username: postgres_user
  mysql:
    root_password: example_root_password
    app_password: example_app_password

# API keys for various services
api_keys:
  github:
    personal_token: ghp_example_token_replace_me
    oauth_client_id: example_client_id
    oauth_client_secret: example_client_secret

  cloudflare:
    api_token: example_cloudflare_token
    zone_id: example_zone_id

  aws:
    access_key_id: AKIAIOSFODNN7EXAMPLE
    secret_access_key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  openai:
    api_key: sk-example_openai_key

# SSH keys for deployment and access
ssh:
  deploy_key: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    Replace this with your actual SSH private key
    Use for automated deployments
    -----END OPENSSH PRIVATE KEY-----

  backup_key: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    Replace with backup access key
    -----END OPENSSH PRIVATE KEY-----

# Wireguard VPN configuration
wireguard:
  private_key: example_wireguard_private_key_base64
  preshared_key: example_preshared_key_base64

# TLS/SSL Certificates
certificates:
  example_com:
    cert: |
      -----BEGIN CERTIFICATE-----
      Replace with actual certificate
      -----END CERTIFICATE-----
    key: |
      -----BEGIN PRIVATE KEY-----
      Replace with actual private key
      -----END PRIVATE KEY-----
    ca: |
      -----BEGIN CERTIFICATE-----
      Replace with CA certificate if needed
      -----END CERTIFICATE-----

# Application-specific secrets
applications:
  nextcloud:
    admin_password: example_nextcloud_admin_pass
    secret_key: example_nextcloud_secret

  grafana:
    admin_password: example_grafana_admin_pass
    secret_key: example_grafana_secret

  authentik:
    secret_key: example_authentik_secret
    postgres_password: example_authentik_db_pass

# Email/SMTP configuration
email:
  smtp:
    host: smtp.example.com
    port: "587"
    username: user@example.com
    password: example_smtp_password

  # Email service API keys
  sendgrid:
    api_key: SG.example_sendgrid_key

# Network services
network:
  # DNS provider credentials
  dns:
    provider: cloudflare
    api_token: example_dns_api_token

  # Dynamic DNS
  ddns:
    username: example_ddns_user
    password: example_ddns_password

# Backup encryption keys
backup:
  restic:
    repository_password: example_restic_password
    s3_access_key: example_s3_key
    s3_secret_key: example_s3_secret

  borg:
    passphrase: example_borg_passphrase

# User passwords (hashed)
# Generate with: mkpasswd -m sha-512
users:
  admin:
    hashed_password: $6$example_hashed_password

  service_accounts:
    monitoring:
      password: example_monitoring_password

# Webhook secrets
webhooks:
  github:
    secret: example_github_webhook_secret

  gitlab:
    token: example_gitlab_webhook_token

# Notes on usage:
# - Use hierarchical structure with meaningful paths
# - Reference secrets in NixOS with: config.sops.secrets."path/to/secret".path
# - For file-based secrets, use the pipe (|) syntax for multi-line content
# - Always set appropriate owner/group permissions in NixOS config
# - Consider creating separate files for different hosts/environments
